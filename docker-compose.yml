services:
  db:
    image: postgres:17.5-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ${POSTGRES_DATA_FOLDER}:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - blog-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "${API_PORT:-8080}:8080"
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    environment:
      - DATABASE_HOST=db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - blog-network

  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    ports:
      - "${WEB_PORT:-3000}:3000"
    env_file:
      - .env
    volumes:
      - ./web:/app
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge
